version: '3.8'

# Production Docker Compose - pulls pre-built images from Docker Hub
# Usage: docker-compose -f docker-compose.prod.yml up -d

services:
  # Next.js Frontend Service
  frontend:
    image: your-dockerhub-username/insurai-frontend:latest  # CHANGE THIS
    container_name: insurance-frontend
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - NODE_ENV=production
      - APP_URL=http://localhost:3000
      - VECTOR_SERVICE_URL=http://backend:8001
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_API_BASE=${GROQ_API_BASE:-https://api.groq.com/openai/v1}
      - GROQ_MODEL=${GROQ_MODEL:-llama-3.3-70b-versatile}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - insurance-network
    restart: unless-stopped

  # Python FastAPI Backend Service
  backend:
    image: your-dockerhub-username/insurai-backend:latest  # CHANGE THIS
    container_name: insurance-backend
    expose:
      - "8001"
    environment:
      - PYTHONUNBUFFERED=1
      - HOST=0.0.0.0
      - PORT=8001
      - VECTOR_DB_PATH=/app/vector_db
      - DOCS_PATH=/app/docs
      - EMBED_MODEL=${EMBED_MODEL:-sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2}
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
      - DOCS_BASE_URL=http://localhost:3000/docs
    volumes:
      # Mount PDF documents from host
      - ./public/docs:/app/docs:ro
      # Persist vector database
      - vector_db_data:/app/vector_db
    networks:
      - insurance-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s  # Faster feedback than 180s

networks:
  insurance-network:
    driver: bridge

volumes:
  vector_db_data:
    driver: local
